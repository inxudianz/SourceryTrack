{% for type in types.implementing.AutoTracking %}
// MARK: {{ type.name }} Auto Tracking

// remove
final class {{type.name}}Auto: {{type.name}} {
{% for method in type.methods %}
    func {{ method.shortName }}(
    {% for param in method.parameters %}
        {{ param.name }}: {{ param.typeName }}
    {% endfor %}
    ) {
        let trackingManager: TrackingManager = TrackingManager()
            .setTracking(for: {% if method.shortName|hasSuffix:"Amplitude" %}.amplitude{% else %}.bigQuery{% endif %})
            .constructParam(
                with:
            {% for param in method.parameters %}
                TrackingManager.TrackingParam(key: .{{ param.name }}, value: {{ param.name }}){% if not forloop.last %},{% endif %}
            {% endfor %}
            )
            .setEventName(with: "{% if method.annotations|annotated:"eventName" %}{{ method.annotations.eventName }}{% endif %}")
        trackingManager.trackEvent()
    }
}
{% endfor %}
}
{% endfor %}
